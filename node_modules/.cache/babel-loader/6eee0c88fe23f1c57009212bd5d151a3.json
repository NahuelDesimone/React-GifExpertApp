{"ast":null,"code":"var _jsxFileName = \"/Users/nahueldesimone/Documents/Repos/Curso_React/04-gif-expert-app/src/components/GifGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { GifGridItem } from './GifGridItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GifGrid = _ref => {\n  _s();\n\n  let {\n    category\n  } = _ref;\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    getGifs();\n  }, []);\n\n  const getGifs = async () => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=V4vdUKkrBcVdxh6HyIUuYFalo5LZvnYI`;\n    const resp = await fetch(url);\n    const {\n      data\n    } = await resp.json();\n    const gifs = data.map(img => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images.downsized_medium.url\n      };\n    });\n    console.log(gifs);\n    setImages(gifs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: images.map(img => /*#__PURE__*/_jsxDEV(GifGridItem, { ...img\n        }, img.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GifGrid, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n\n_c = GifGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifGrid\");","map":{"version":3,"sources":["/Users/nahueldesimone/Documents/Repos/Curso_React/04-gif-expert-app/src/components/GifGrid.js"],"names":["React","useEffect","useState","GifGridItem","GifGrid","category","images","setImages","getGifs","url","encodeURI","resp","fetch","data","json","gifs","map","img","id","title","downsized_medium","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,OAAO,MAAMC,OAAO,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAErC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAMA,QAAMA,OAAO,GAAG,YAAY;AACxB,UAAMC,GAAG,GAAI,0CAAyCC,SAAS,CAACL,QAAD,CAAW,oDAA1E;AACA,UAAMM,IAAI,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAxB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMF,IAAI,CAACG,IAAL,EAAvB;AAEA,UAAMC,IAAI,GAAGF,IAAI,CAACG,GAAL,CAASC,GAAG,IAAI;AACzB,aAAO;AACHC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADL;AAEHC,QAAAA,KAAK,EAAEF,GAAG,CAACE,KAFR;AAGHV,QAAAA,GAAG,EAAEQ,GAAG,CAACX,MAAJ,CAAWc,gBAAX,CAA4BX;AAH9B,OAAP;AAKH,KANY,CAAb;AAQAY,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAR,IAAAA,SAAS,CAACQ,IAAD,CAAT;AACH,GAfD;;AAiBA,sBACI;AAAA,4BACI;AAAA,gBAAKV;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAA,kBAEQC,MAAM,CAACU,GAAP,CAAYC,GAAD,iBACP,QAAC,WAAD,OAEQA;AAFR,WACSA,GAAG,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAmBH,CA/CM;;GAAMd,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const [images, setImages] = useState([]);\n\n\n    useEffect(() => {\n        getGifs();\n    }, [])\n\n\n\n    const getGifs = async () => {\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=V4vdUKkrBcVdxh6HyIUuYFalo5LZvnYI`\n        const resp = await fetch(url);\n        const { data } = await resp.json();\n\n        const gifs = data.map(img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images.downsized_medium.url\n            }\n        })\n\n        console.log(gifs);\n        setImages(gifs);\n    }\n\n    return (\n        <>\n            <h3>{category}</h3>\n\n            <div className='card-grid'>\n                <ol>\n                    {\n                        images.map((img) => (\n                            <GifGridItem\n                                key={img.id}\n                                {...img} />\n                        ))\n                    }\n\n                </ol>\n\n            </div>\n        </>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}